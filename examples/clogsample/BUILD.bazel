load(
    "@rules_dotnet//dotnet:defs.bzl",
    "csharp_binary",
    "csharp_library",
    "publish_binary",
    "csharp_nunit_test",
)
load("//examples/clogsample:clog.bzl", "clog")

cc_binary(
    name = "clog_c_test",
    includes = ["../../src/clogutils"],
    srcs = ["simple.cpp", "simple.cpp.clog.h", "TEST_simple.cpp.clog.h.c", "//src/clogutils:clog.h"],
    deps = [":thing"]
)

# Learn this 
# https://bazel.build/build/style-guide

genrule(
  name = "debug_file",
  srcs = ["debug.sh", "simple.cpp", "simple.cpp.clog.h"],
  outs = ["final.h"],
  cmd =  "./$(location debug.sh) $(location simple.cpp.clog.h) $(location simple.cpp.clog.h)",
  tools = ["//src/clog:clogP"]
)


cc_library(
    name = "thing",
    hdrs = ["simple.cpp.clog.h"],
    includes = ["."],
)


# https://bazel.build/extending/macros

genrule(
  name = "tangle_file",
  srcs = ["clog_build.sh", "simple.cpp", "//examples:clog.sidecar", "//examples:clog_examples.clog_config", "//src/clogutils:clog.h"],
  outs = ["simple.cpp.clog.h", "TEST_simple.cpp.clog.h.c", "clog.sidecar.new"],
  cmd =  "./$(location clog_build.sh) $(location //src/clog:clogP) $(location //examples:clog_examples.clog_config) $(location //examples:clog.sidecar) $(location :simple.cpp) $(@D)",
  tools = ["//src/clog:clogP"]
)
